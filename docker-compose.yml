version: "3.9"

networks:
  default_net:
    name: default_net
    driver: bridge
volumes:
  database-store:
    driver: local
services:
  ############################ CARTS ############################
  database-carts:
    image: postgres:13
    container_name: database-carts
    volumes:
      - ~/.docker-conf/postgres/data/:/var/lib/postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: carlos
      POSTGRES_PASSWORD: 12345
      POSTGRES_DB: carts
    networks:
      - default_net

  app-carts:
    container_name: app-carts
    build:
      context: "./carts-service"
    ports:
      - 8082:8080
    depends_on:
      - database-carts
      - rabbitmq
    environment:
      TZ: Europe/Lisbon
      DB_HOST: database-carts
      DB_PORT: 5432
      DB_NAME: carts
      DB_USER: carlos
      DB_PASS: 12345
      SQL_SHOW: true
      DLL_AUTO: update
      RABBIT_HOST: rabbitmq
      RABBIT_PORT: 5672
      RABBIT_USER: carlos
      RABBIT_PASS: 12345
    networks:
      - default_net
  
  ############################ PAYMENTS ############################
  database-payments:
    image: postgres:13
    container_name: database-payments
    volumes:
      - ~/.docker-conf/postgres/data/:/var/lib/postgres
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: carlos
      POSTGRES_PASSWORD: 12345
      POSTGRES_DB: payments
    networks:
      - default_net

  app-payments:
    container_name: app-payments
    build:
      context: "./payments-service"
    ports:
      - 8083:8080
    depends_on:
      - database-payments
      - rabbitmq
    environment:
      TZ: Europe/Lisbon
      DB_HOST: database-payments
      DB_PORT: 5432
      DB_NAME: payments
      DB_USER: carlos
      DB_PASS: 12345
      SQL_SHOW: true
      DLL_AUTO: update
      RABBIT_HOST: rabbitmq
      RABBIT_PORT: 5672
      RABBIT_USER: carlos
      RABBIT_PASS: 12345
    networks:
      - default_net

  ############################ PRODUCTS ############################
  database-products:
    image: postgres:13
    container_name: database-products
    volumes:
      - ~/.docker-conf/postgres/data/:/var/lib/postgres
    ports:
      - "5434:5432"
    environment:
      POSTGRES_USER: carlos
      POSTGRES_PASSWORD: 12345
      POSTGRES_DB: products
    networks:
      - default_net
    
  app-products:
    container_name: app-products
    build:
      context: "./products-service"
    ports:
      - 8084:8080
    depends_on:
      - database-products
      - rabbitmq
    environment:
      TZ: Europe/Lisbon
      DB_HOST: database-products
      DB_PORT: 5432
      DB_NAME: products
      DB_USER: carlos
      DB_PASS: 12345
      SQL_SHOW: true
      DLL_AUTO: update
      RABBIT_HOST: rabbitmq
      RABBIT_PORT: 5672
      RABBIT_USER: carlos
      RABBIT_PASS: 12345
    networks:
      - default_net

  ############################ PROMOTIONS ############################
  database-promotions:
    image: postgres:13
    container_name: database-promotions
    volumes:
      - ~/.docker-conf/postgres/data/:/var/lib/postgres
    ports:
      - "5435:5432"
    environment:
      POSTGRES_USER: carlos
      POSTGRES_PASSWORD: 12345
      POSTGRES_DB: promotions
    networks:
      - default_net

  app-promotions:
    container_name: app-promotions
    build:
      context: "./promotions-service"
    ports:
      - 8085:8080
    depends_on:
      - database-promotions
      - rabbitmq
    environment:
      TZ: Europe/Lisbon
      DB_HOST: database-promotions
      DB_PORT: 5432
      DB_NAME: promotions
      DB_USER: carlos
      DB_PASS: 12345
      SQL_SHOW: true
      DLL_AUTO: update
      RABBIT_HOST: rabbitmq
      RABBIT_PORT: 5672
      RABBIT_USER: carlos
      RABBIT_PASS: 12345
    networks:
      - default_net

  ############################ USERS ############################
  database-users:
    image: postgres:13
    container_name: database-users
    volumes:
      - ~/.docker-conf/postgres/data/:/var/lib/postgres
    ports:
      - "5436:5432"
    environment:
      POSTGRES_USER: carlos
      POSTGRES_PASSWORD: 12345
      POSTGRES_DB: users
    networks:
      - default_net

  app-users:
    container_name: app-users
    build:
      context: "./users-service"
    ports:
      - 8086:8080
    depends_on:
      - database-users
      - rabbitmq
    environment:
      TZ: Europe/Lisbon
      DB_HOST: database-users
      DB_PORT: 5432
      DB_NAME: users
      DB_USER: carlos
      DB_PASS: 12345
      SQL_SHOW: true
      DLL_AUTO: update
      RABBIT_HOST: rabbitmq
      RABBIT_PORT: 5672
      RABBIT_USER: carlos
      RABBIT_PASS: 12345
    networks:
      - default_net      

    ############################ ORDERS ############################
  database-orders:
    image: postgres:13
    container_name: database-orders
    volumes:
      - ~/.docker-conf/postgres/data/:/var/lib/postgres
    ports:
      - "5437:5432"
    environment:
      POSTGRES_USER: carlos
      POSTGRES_PASSWORD: 12345
      POSTGRES_DB: orders
    networks:
      - default_net

  app-orders:
    container_name: app-orders
    build:
      context: "./orders-service"
    ports:
      - 8087:8080
    depends_on:
      - database-orders
      - rabbitmq
    environment:
      TZ: Europe/Lisbon
      DB_HOST: database-orders
      DB_PORT: 5432
      DB_NAME: orders
      DB_USER: carlos
      DB_PASS: 12345
      SQL_SHOW: true
      DLL_AUTO: update
      RABBIT_HOST: rabbitmq
      RABBIT_PORT: 5672
      RABBIT_USER: carlos
      RABBIT_PASS: 12345
    networks:
      - default_net      

  ############################ RABBITMQ ############################
  rabbitmq:
    image: rabbitmq:3.12.12-management
    container_name: rabbitmq-api
    ports:
      - 5672:5672
      - 15672:15672
    environment:
      RABBITMQ_DEFAULT_USER: carlos
      RABBITMQ_DEFAULT_PASS: 12345
    volumes:
      - database-store:/rabbitmq
    networks:
      - default_net

  ############################ RABBITMQ ############################
  redis:
    image: redis:6.2.6
    container_name: redis-api
    ports:
      - 6379:6379
    command: redis-server --save 20 1 --loglevel warning
    volumes:
      - database-store:/redis
    networks:
      - default_net